//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-558 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.17 at 12:50:48 PM GMT 
//


package eu.cec.digit.circabc.migration.entities.generated.nodes;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.alfresco.service.cmr.repository.NodeRef;

import eu.cec.digit.circabc.migration.entities.TypedProperty.CreatedProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.CreatorProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.DescriptionProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.ModifiedProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.ModifierProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.NameProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.OwnerProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.TitleProperty;
import eu.cec.digit.circabc.migration.entities.adapter.NamePropertyAdapter;
import eu.cec.digit.circabc.migration.entities.generated.properties.ExtendedProperty;
import eu.cec.digit.circabc.migration.entities.generated.properties.I18NProperty;


/**
 * <p>Java class for namedNode complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="namedNode">
 *   &lt;complexContent>
 *     &lt;extension base="{https://circabc.europa.eu/Import/NodesSchema/1.0}titledNode">
 *       &lt;attribute name="name" use="required" type="{https://circabc.europa.eu/Import/PropertiesSchema/1.0}name" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "namedNode")
@XmlSeeAlso({
    Forum.class,
    MlContent.class,
    Link.class,
    Topic.class,
    Discussions.class,
    Url.class,
    Dossier.class,
    Space.class,
    ContentNode.class,
    InfMLContent.class,
    InfSpace.class,
    InterestGroup.class,
    Category.class,
    CategoryHeader.class
})
public abstract class NamedNode
    extends TitledNode
    implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlAttribute(required = true)
    @XmlJavaTypeAdapter(NamePropertyAdapter.class)
    protected NameProperty name;

    /**
     * Default no-arg constructor
     * 
     */
    public NamedNode() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public NamedNode(final NodeRef nodeReference, final List<ExtendedProperty> extendedProperties, final CreatedProperty created, final CreatorProperty creator, final ModifiedProperty modified, final ModifierProperty modifier, final List<I18NProperty> i18NTitles, final TitleProperty title, final List<I18NProperty> i18NDescriptions, final DescriptionProperty description, final OwnerProperty owner, final NameProperty name) {
        super(nodeReference, extendedProperties, created, creator, modified, modifier, i18NTitles, title, i18NDescriptions, description, owner);
        this.name = name;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public NameProperty getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(NameProperty value) {
        this.name = value;
    }

    public NamedNode withName(NameProperty value) {
        setName(value);
        return this;
    }

    @Override
    public NamedNode withI18NTitles(I18NProperty... values) {
        if (values!= null) {
            for (I18NProperty value: values) {
                getI18NTitles().add(value);
            }
        }
        return this;
    }

    @Override
    public NamedNode withI18NTitles(Collection<I18NProperty> values) {
        if (values!= null) {
            getI18NTitles().addAll(values);
        }
        return this;
    }

    @Override
    public NamedNode withTitle(TitleProperty value) {
        setTitle(value);
        return this;
    }

    @Override
    public NamedNode withI18NDescriptions(I18NProperty... values) {
        if (values!= null) {
            for (I18NProperty value: values) {
                getI18NDescriptions().add(value);
            }
        }
        return this;
    }

    @Override
    public NamedNode withI18NDescriptions(Collection<I18NProperty> values) {
        if (values!= null) {
            getI18NDescriptions().addAll(values);
        }
        return this;
    }

    @Override
    public NamedNode withDescription(DescriptionProperty value) {
        setDescription(value);
        return this;
    }

    @Override
    public NamedNode withOwner(OwnerProperty value) {
        setOwner(value);
        return this;
    }

    @Override
    public NamedNode withNodeReference(NodeRef value) {
        setNodeReference(value);
        return this;
    }

    @Override
    public NamedNode withExtendedProperties(ExtendedProperty... values) {
        if (values!= null) {
            for (ExtendedProperty value: values) {
                getExtendedProperties().add(value);
            }
        }
        return this;
    }

    @Override
    public NamedNode withExtendedProperties(Collection<ExtendedProperty> values) {
        if (values!= null) {
            getExtendedProperties().addAll(values);
        }
        return this;
    }

    @Override
    public NamedNode withCreated(CreatedProperty value) {
        setCreated(value);
        return this;
    }

    @Override
    public NamedNode withCreator(CreatorProperty value) {
        setCreator(value);
        return this;
    }

    @Override
    public NamedNode withModified(ModifiedProperty value) {
        setModified(value);
        return this;
    }

    @Override
    public NamedNode withModifier(ModifierProperty value) {
        setModifier(value);
        return this;
    }

}
