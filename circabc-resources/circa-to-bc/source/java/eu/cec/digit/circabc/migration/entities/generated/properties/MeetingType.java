//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-558 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.17 at 12:50:48 PM GMT 
//


package eu.cec.digit.circabc.migration.entities.generated.properties;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for meetingType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="meetingType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="FaceToFace"/>
 *     &lt;enumeration value="VirtualMeeting"/>
 *     &lt;enumeration value="ElectronicWithConnectixVideoPhone"/>
 *     &lt;enumeration value="ElectronicWithEnhancedSeeYou_SeeMe"/>
 *     &lt;enumeration value="ElectronicWithInternetVideoPhone"/>
 *     &lt;enumeration value="ElectronicWithIntelProshare"/>
 *     &lt;enumeration value="ElectronicWithMicrosoftNetMeeting"/>
 *     &lt;enumeration value="ElectronicWithNetscapeConference"/>
 *     &lt;enumeration value="ElectronicWithNetscapeCooltalk"/>
 *     &lt;enumeration value="ElectronicWithVDOnetVDOPhone"/>
 *     &lt;enumeration value="ElectronicWithotherSoftware"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "meetingType")
@XmlEnum
public enum MeetingType {

    @XmlEnumValue("FaceToFace")
    FACE_TO_FACE("FaceToFace"),
    @XmlEnumValue("VirtualMeeting")
    VIRTUAL_MEETING("VirtualMeeting"),
    @XmlEnumValue("ElectronicWithConnectixVideoPhone")
    ELECTRONIC_WITH_CONNECTIX_VIDEO_PHONE("ElectronicWithConnectixVideoPhone"),
    @XmlEnumValue("ElectronicWithEnhancedSeeYou_SeeMe")
    ELECTRONIC_WITH_ENHANCED_SEE_YOU_SEE_ME("ElectronicWithEnhancedSeeYou_SeeMe"),
    @XmlEnumValue("ElectronicWithInternetVideoPhone")
    ELECTRONIC_WITH_INTERNET_VIDEO_PHONE("ElectronicWithInternetVideoPhone"),
    @XmlEnumValue("ElectronicWithIntelProshare")
    ELECTRONIC_WITH_INTEL_PROSHARE("ElectronicWithIntelProshare"),
    @XmlEnumValue("ElectronicWithMicrosoftNetMeeting")
    ELECTRONIC_WITH_MICROSOFT_NET_MEETING("ElectronicWithMicrosoftNetMeeting"),
    @XmlEnumValue("ElectronicWithNetscapeConference")
    ELECTRONIC_WITH_NETSCAPE_CONFERENCE("ElectronicWithNetscapeConference"),
    @XmlEnumValue("ElectronicWithNetscapeCooltalk")
    ELECTRONIC_WITH_NETSCAPE_COOLTALK("ElectronicWithNetscapeCooltalk"),
    @XmlEnumValue("ElectronicWithVDOnetVDOPhone")
    ELECTRONIC_WITH_VD_ONET_VDO_PHONE("ElectronicWithVDOnetVDOPhone"),
    @XmlEnumValue("ElectronicWithotherSoftware")
    ELECTRONIC_WITHOTHER_SOFTWARE("ElectronicWithotherSoftware");
    private final String value;

    MeetingType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MeetingType fromValue(String v) {
        for (MeetingType c: MeetingType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
