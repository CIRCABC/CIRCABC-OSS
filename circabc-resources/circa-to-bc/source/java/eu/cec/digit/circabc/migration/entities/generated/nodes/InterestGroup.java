//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-558 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.17 at 12:50:48 PM GMT 
//


package eu.cec.digit.circabc.migration.entities.generated.nodes;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.alfresco.service.cmr.repository.NodeRef;

import eu.cec.digit.circabc.migration.entities.TypedProperty.ContactInfoProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.CreatedProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.CreatorProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.DescriptionProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.ModifiedProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.ModifierProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.NameProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.OwnerProperty;
import eu.cec.digit.circabc.migration.entities.TypedProperty.TitleProperty;
import eu.cec.digit.circabc.migration.entities.adapter.ContactInfoPropertyAdapter;
import eu.cec.digit.circabc.migration.entities.generated.permissions.Applications;
import eu.cec.digit.circabc.migration.entities.generated.permissions.Notifications;
import eu.cec.digit.circabc.migration.entities.generated.properties.DynamicPropertyDefinitions;
import eu.cec.digit.circabc.migration.entities.generated.properties.ExtendedProperty;
import eu.cec.digit.circabc.migration.entities.generated.properties.I18NProperty;
import eu.cec.digit.circabc.migration.entities.generated.properties.KeywordDefinitions;


/**
 * <p>Java class for interestGroup complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="interestGroup">
 *   &lt;complexContent>
 *     &lt;extension base="{https://circabc.europa.eu/Import/NodesSchema/1.0}namedNode">
 *       &lt;sequence>
 *         &lt;group ref="{https://circabc.europa.eu/Import/PropertiesSchema/1.0}igProperties"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/PropertiesSchema/1.0}keywordDefinitions" minOccurs="0"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/PropertiesSchema/1.0}dynamicPropertyDefinitions" minOccurs="0"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/PermissionsSchema/1.0}notifications" minOccurs="0"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/PermissionsSchema/1.0}applications" minOccurs="0"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/NodesSchema/1.0}logoDefinitions" minOccurs="0"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/NodesSchema/1.0}information"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/NodesSchema/1.0}library"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/NodesSchema/1.0}directory"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/NodesSchema/1.0}events"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/NodesSchema/1.0}newsgroups"/>
 *         &lt;element ref="{https://circabc.europa.eu/Import/NodesSchema/1.0}surveys" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "interestGroup", propOrder = {
    "i18NContactInfos",
    "contactInfo",
    "keywordDefinitions",
    "dynamicPropertyDefinitions",
    "notifications",
    "applications",
    "logoDefinitions",
    "information",
    "library",
    "directory",
    "events",
    "newsgroups",
    "surveys"
})
@XmlRootElement(name = "interestGroup")
public class InterestGroup
    extends NamedNode
    implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "I18NContactInfo", namespace = "https://circabc.europa.eu/Import/PropertiesSchema/1.0")
    protected List<I18NProperty> i18NContactInfos;
    @XmlElement(namespace = "https://circabc.europa.eu/Import/PropertiesSchema/1.0", type = String.class)
    @XmlJavaTypeAdapter(ContactInfoPropertyAdapter.class)
    protected ContactInfoProperty contactInfo;
    @XmlElement(namespace = "https://circabc.europa.eu/Import/PropertiesSchema/1.0")
    protected KeywordDefinitions keywordDefinitions;
    @XmlElement(namespace = "https://circabc.europa.eu/Import/PropertiesSchema/1.0")
    protected DynamicPropertyDefinitions dynamicPropertyDefinitions;
    @XmlElement(namespace = "https://circabc.europa.eu/Import/PermissionsSchema/1.0")
    protected Notifications notifications;
    @XmlElement(namespace = "https://circabc.europa.eu/Import/PermissionsSchema/1.0")
    protected Applications applications;
    protected LogoDefinitions logoDefinitions;
    @XmlElement(required = true)
    protected Information information;
    @XmlElement(required = true)
    protected Library library;
    @XmlElement(required = true)
    protected Directory directory;
    @XmlElement(required = true)
    protected Events events;
    @XmlElement(required = true)
    protected Newsgroups newsgroups;
    protected Surveys surveys;

    /**
     * Default no-arg constructor
     * 
     */
    public InterestGroup() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public InterestGroup(final NodeRef nodeReference, final List<ExtendedProperty> extendedProperties, final CreatedProperty created, final CreatorProperty creator, final ModifiedProperty modified, final ModifierProperty modifier, final List<I18NProperty> i18NTitles, final TitleProperty title, final List<I18NProperty> i18NDescriptions, final DescriptionProperty description, final OwnerProperty owner, final NameProperty name, final List<I18NProperty> i18NContactInfos, final ContactInfoProperty contactInfo, final KeywordDefinitions keywordDefinitions, final DynamicPropertyDefinitions dynamicPropertyDefinitions, final Notifications notifications, final Applications applications, final LogoDefinitions logoDefinitions, final Information information, final Library library, final Directory directory, final Events events, final Newsgroups newsgroups, final Surveys surveys) {
        super(nodeReference, extendedProperties, created, creator, modified, modifier, i18NTitles, title, i18NDescriptions, description, owner, name);
        this.i18NContactInfos = i18NContactInfos;
        this.contactInfo = contactInfo;
        this.keywordDefinitions = keywordDefinitions;
        this.dynamicPropertyDefinitions = dynamicPropertyDefinitions;
        this.notifications = notifications;
        this.applications = applications;
        this.logoDefinitions = logoDefinitions;
        this.information = information;
        this.library = library;
        this.directory = directory;
        this.events = events;
        this.newsgroups = newsgroups;
        this.surveys = surveys;
    }

    /**
     * Gets the value of the i18NContactInfos property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the i18NContactInfos property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getI18NContactInfos().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link I18NProperty }
     * 
     * 
     */
    public List<I18NProperty> getI18NContactInfos() {
        if (i18NContactInfos == null) {
            i18NContactInfos = new ArrayList<I18NProperty>();
        }
        return this.i18NContactInfos;
    }

    /**
     * Gets the value of the contactInfo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public ContactInfoProperty getContactInfo() {
        return contactInfo;
    }

    /**
     * Sets the value of the contactInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setContactInfo(ContactInfoProperty value) {
        this.contactInfo = value;
    }

    /**
     * Gets the value of the keywordDefinitions property.
     * 
     * @return
     *     possible object is
     *     {@link KeywordDefinitions }
     *     
     */
    public KeywordDefinitions getKeywordDefinitions() {
        return keywordDefinitions;
    }

    /**
     * Sets the value of the keywordDefinitions property.
     * 
     * @param value
     *     allowed object is
     *     {@link KeywordDefinitions }
     *     
     */
    public void setKeywordDefinitions(KeywordDefinitions value) {
        this.keywordDefinitions = value;
    }

    /**
     * Gets the value of the dynamicPropertyDefinitions property.
     * 
     * @return
     *     possible object is
     *     {@link DynamicPropertyDefinitions }
     *     
     */
    public DynamicPropertyDefinitions getDynamicPropertyDefinitions() {
        return dynamicPropertyDefinitions;
    }

    /**
     * Sets the value of the dynamicPropertyDefinitions property.
     * 
     * @param value
     *     allowed object is
     *     {@link DynamicPropertyDefinitions }
     *     
     */
    public void setDynamicPropertyDefinitions(DynamicPropertyDefinitions value) {
        this.dynamicPropertyDefinitions = value;
    }

    /**
     * Gets the value of the notifications property.
     * 
     * @return
     *     possible object is
     *     {@link Notifications }
     *     
     */
    public Notifications getNotifications() {
        return notifications;
    }

    /**
     * Sets the value of the notifications property.
     * 
     * @param value
     *     allowed object is
     *     {@link Notifications }
     *     
     */
    public void setNotifications(Notifications value) {
        this.notifications = value;
    }

    /**
     * Gets the value of the applications property.
     * 
     * @return
     *     possible object is
     *     {@link Applications }
     *     
     */
    public Applications getApplications() {
        return applications;
    }

    /**
     * Sets the value of the applications property.
     * 
     * @param value
     *     allowed object is
     *     {@link Applications }
     *     
     */
    public void setApplications(Applications value) {
        this.applications = value;
    }

    /**
     * Gets the value of the logoDefinitions property.
     * 
     * @return
     *     possible object is
     *     {@link LogoDefinitions }
     *     
     */
    public LogoDefinitions getLogoDefinitions() {
        return logoDefinitions;
    }

    /**
     * Sets the value of the logoDefinitions property.
     * 
     * @param value
     *     allowed object is
     *     {@link LogoDefinitions }
     *     
     */
    public void setLogoDefinitions(LogoDefinitions value) {
        this.logoDefinitions = value;
    }

    /**
     * Gets the value of the information property.
     * 
     * @return
     *     possible object is
     *     {@link Information }
     *     
     */
    public Information getInformation() {
        return information;
    }

    /**
     * Sets the value of the information property.
     * 
     * @param value
     *     allowed object is
     *     {@link Information }
     *     
     */
    public void setInformation(Information value) {
        this.information = value;
    }

    /**
     * Gets the value of the library property.
     * 
     * @return
     *     possible object is
     *     {@link Library }
     *     
     */
    public Library getLibrary() {
        return library;
    }

    /**
     * Sets the value of the library property.
     * 
     * @param value
     *     allowed object is
     *     {@link Library }
     *     
     */
    public void setLibrary(Library value) {
        this.library = value;
    }

    /**
     * Gets the value of the directory property.
     * 
     * @return
     *     possible object is
     *     {@link Directory }
     *     
     */
    public Directory getDirectory() {
        return directory;
    }

    /**
     * Sets the value of the directory property.
     * 
     * @param value
     *     allowed object is
     *     {@link Directory }
     *     
     */
    public void setDirectory(Directory value) {
        this.directory = value;
    }

    /**
     * Gets the value of the events property.
     * 
     * @return
     *     possible object is
     *     {@link Events }
     *     
     */
    public Events getEvents() {
        return events;
    }

    /**
     * Sets the value of the events property.
     * 
     * @param value
     *     allowed object is
     *     {@link Events }
     *     
     */
    public void setEvents(Events value) {
        this.events = value;
    }

    /**
     * Gets the value of the newsgroups property.
     * 
     * @return
     *     possible object is
     *     {@link Newsgroups }
     *     
     */
    public Newsgroups getNewsgroups() {
        return newsgroups;
    }

    /**
     * Sets the value of the newsgroups property.
     * 
     * @param value
     *     allowed object is
     *     {@link Newsgroups }
     *     
     */
    public void setNewsgroups(Newsgroups value) {
        this.newsgroups = value;
    }

    /**
     * Gets the value of the surveys property.
     * 
     * @return
     *     possible object is
     *     {@link Surveys }
     *     
     */
    public Surveys getSurveys() {
        return surveys;
    }

    /**
     * Sets the value of the surveys property.
     * 
     * @param value
     *     allowed object is
     *     {@link Surveys }
     *     
     */
    public void setSurveys(Surveys value) {
        this.surveys = value;
    }

    public InterestGroup withI18NContactInfos(I18NProperty... values) {
        if (values!= null) {
            for (I18NProperty value: values) {
                getI18NContactInfos().add(value);
            }
        }
        return this;
    }

    public InterestGroup withI18NContactInfos(Collection<I18NProperty> values) {
        if (values!= null) {
            getI18NContactInfos().addAll(values);
        }
        return this;
    }

    public InterestGroup withContactInfo(ContactInfoProperty value) {
        setContactInfo(value);
        return this;
    }

    public InterestGroup withKeywordDefinitions(KeywordDefinitions value) {
        setKeywordDefinitions(value);
        return this;
    }

    public InterestGroup withDynamicPropertyDefinitions(DynamicPropertyDefinitions value) {
        setDynamicPropertyDefinitions(value);
        return this;
    }

    public InterestGroup withNotifications(Notifications value) {
        setNotifications(value);
        return this;
    }

    public InterestGroup withApplications(Applications value) {
        setApplications(value);
        return this;
    }

    public InterestGroup withLogoDefinitions(LogoDefinitions value) {
        setLogoDefinitions(value);
        return this;
    }

    public InterestGroup withInformation(Information value) {
        setInformation(value);
        return this;
    }

    public InterestGroup withLibrary(Library value) {
        setLibrary(value);
        return this;
    }

    public InterestGroup withDirectory(Directory value) {
        setDirectory(value);
        return this;
    }

    public InterestGroup withEvents(Events value) {
        setEvents(value);
        return this;
    }

    public InterestGroup withNewsgroups(Newsgroups value) {
        setNewsgroups(value);
        return this;
    }

    public InterestGroup withSurveys(Surveys value) {
        setSurveys(value);
        return this;
    }

    @Override
    public InterestGroup withName(NameProperty value) {
        setName(value);
        return this;
    }

    @Override
    public InterestGroup withI18NTitles(I18NProperty... values) {
        if (values!= null) {
            for (I18NProperty value: values) {
                getI18NTitles().add(value);
            }
        }
        return this;
    }

    @Override
    public InterestGroup withI18NTitles(Collection<I18NProperty> values) {
        if (values!= null) {
            getI18NTitles().addAll(values);
        }
        return this;
    }

    @Override
    public InterestGroup withTitle(TitleProperty value) {
        setTitle(value);
        return this;
    }

    @Override
    public InterestGroup withI18NDescriptions(I18NProperty... values) {
        if (values!= null) {
            for (I18NProperty value: values) {
                getI18NDescriptions().add(value);
            }
        }
        return this;
    }

    @Override
    public InterestGroup withI18NDescriptions(Collection<I18NProperty> values) {
        if (values!= null) {
            getI18NDescriptions().addAll(values);
        }
        return this;
    }

    @Override
    public InterestGroup withDescription(DescriptionProperty value) {
        setDescription(value);
        return this;
    }

    @Override
    public InterestGroup withOwner(OwnerProperty value) {
        setOwner(value);
        return this;
    }

    @Override
    public InterestGroup withNodeReference(NodeRef value) {
        setNodeReference(value);
        return this;
    }

    @Override
    public InterestGroup withExtendedProperties(ExtendedProperty... values) {
        if (values!= null) {
            for (ExtendedProperty value: values) {
                getExtendedProperties().add(value);
            }
        }
        return this;
    }

    @Override
    public InterestGroup withExtendedProperties(Collection<ExtendedProperty> values) {
        if (values!= null) {
            getExtendedProperties().addAll(values);
        }
        return this;
    }

    @Override
    public InterestGroup withCreated(CreatedProperty value) {
        setCreated(value);
        return this;
    }

    @Override
    public InterestGroup withCreator(CreatorProperty value) {
        setCreator(value);
        return this;
    }

    @Override
    public InterestGroup withModified(ModifiedProperty value) {
        setModified(value);
        return this;
    }

    @Override
    public InterestGroup withModifier(ModifierProperty value) {
        setModifier(value);
        return this;
    }

}
