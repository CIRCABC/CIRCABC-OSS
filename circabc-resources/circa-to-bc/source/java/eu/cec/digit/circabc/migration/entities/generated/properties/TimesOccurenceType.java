//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-558 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.17 at 12:50:48 PM GMT 
//


package eu.cec.digit.circabc.migration.entities.generated.properties;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for timesOccurenceType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="timesOccurenceType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Daily"/>
 *     &lt;enumeration value="Weekly"/>
 *     &lt;enumeration value="EveryTwoWeeks"/>
 *     &lt;enumeration value="MonthlyByDate"/>
 *     &lt;enumeration value="MonthlyByWeekday"/>
 *     &lt;enumeration value="Yearly"/>
 *     &lt;enumeration value="MondayToFriday"/>
 *     &lt;enumeration value="MondayWednseyFriday"/>
 *     &lt;enumeration value="TuesdayThursday"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "timesOccurenceType")
@XmlEnum
public enum TimesOccurenceType {

    @XmlEnumValue("Daily")
    DAILY("Daily"),
    @XmlEnumValue("Weekly")
    WEEKLY("Weekly"),
    @XmlEnumValue("EveryTwoWeeks")
    EVERY_TWO_WEEKS("EveryTwoWeeks"),
    @XmlEnumValue("MonthlyByDate")
    MONTHLY_BY_DATE("MonthlyByDate"),
    @XmlEnumValue("MonthlyByWeekday")
    MONTHLY_BY_WEEKDAY("MonthlyByWeekday"),
    @XmlEnumValue("Yearly")
    YEARLY("Yearly"),
    @XmlEnumValue("MondayToFriday")
    MONDAY_TO_FRIDAY("MondayToFriday"),
    @XmlEnumValue("MondayWednseyFriday")
    MONDAY_WEDNSEY_FRIDAY("MondayWednseyFriday"),
    @XmlEnumValue("TuesdayThursday")
    TUESDAY_THURSDAY("TuesdayThursday");
    private final String value;

    TimesOccurenceType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TimesOccurenceType fromValue(String v) {
        for (TimesOccurenceType c: TimesOccurenceType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
