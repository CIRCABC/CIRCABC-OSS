# PatchService messages
patch.service.not_relevant=Not relevant to schema {0}
#Not relevant to schema {0}
patch.executer.checking=Checking for patches to apply ...
#Checking for patches to apply ...
patch.service.applying_patch=Aplicando o patch ''{0}'' ({1}).
#tApplying patch ''{0}'' ({1}).
patch.progress=ttPatch {0}% complete, estimated complete at {1}.
#ttPatch {0}% complete, estimated complete at {1}.
patch.executer.no_patches_required=No patches were required.
#No patches were required.
patch.executer.system_readonly=Patches cannot be applied to a read-only system. Possible incompatibilities may exist between the application code and the existing data.
#Patches cannot be applied to a read-only system. Possible incompatibilities may exist between the application code and the existing data.
patch.executer.not_executed =\n=== Recorded patch (not executed) === \nID: {0}\nRESULT: \n{1}\n=====================================
#n
patch.executer.executed =n=== Applied patch === nID: {0}nRESULT: n{1}n=====================================
#n
patch.executer.failed =n=== Failed to apply patch === nID: {0}nRESULT: n{1}n=====================================
#n
patch.noLongerSupportedPatch.err.use_incremental_upgrade = nPatch ''{0}'' was last supported on version {1}.n Please follow an incremental upgrade using version {2}.
# nPatch ''{0}'' was last supported on version {1}.n Please follow an incremental upgrade using version {2}.
# General patch messages

patch.genericBootstrap.result.exists=Bootstrap location already exists: {0}
#Bootstrap location already exists: {0}
patch.genericBootstrap.result.created=Imported view into bootstrap location: {0} ({1})
#Imported view into bootstrap location: {0} ({1})
patch.genericBootstrap.err.multiple_found=Multiple nodes found: {0}
#Multiple nodes found: {0}

patch.general.property_not_set=Patch property ''{0}'' has not been set on this patch: {1}
#Patch property ''{0}'' has not been set on this patch: {1}

# Individual patch messages

patch.marker.description=Marker patch to record installations and upgrades
#Marker patch to record installations and upgrades
patch.marker.result=Marker patch applied
#Marker patch applied

patch.savedSearchesFolder.description=Ensures the existence of the 'Saved Searches' folder.
#Ensures the existence of the 'Saved Searches' folder.
patch.savedSearchesFolder.result.exists=The saved searches folder already exists: {0}
#The saved searches folder already exists: {0}
patch.savedSearchesFolder.result.created=The saved searches folder was successfully created: {0}
#The saved searches folder was successfully created: {0}

patch.savedSearchesPermission.description=Sets required permissions on 'Saved Searches' folder.
#Sets required permissions on 'Saved Searches' folder.
patch.savedSearchesPermission.result.applied=Granted CONTRIBUTOR role to EVERYONE on 'Saved Searches' folder: {0}.
#Granted CONTRIBUTOR role to EVERYONE on 'Saved Searches' folder: {0}.
patch.savedSearchesPermission.err.not_found='Saved Searches' folder could not be found.
#'Saved Searches' folder could not be found.

patch.updatePermissionData.description=Update permissions from 'folder' to 'cmobject' [JIRA: AR-344].
#Update permissions from 'folder' to 'cmobject' [JIRA: AR-344].
patch.updatePermissionData.result=Changed {0} 'folder' access control entries to 'cmobject'.
#Changed {0} 'folder' access control entries to 'cmobject'.

patch.authoritiesFolder.description=Ensures the existence of the user authorities folder [JIRA: AR-497].
#Ensures the existence of the user authorities folder [JIRA: AR-497].

patch.authoritiesFolderPermission.description=Ensures group authorities are visible to everyone.
#Ensures group authorities are visible to everyone.

patch.guestUser.description=Add the guest user, guest home space; and fix permissions on company home, guest home and guest person.
#Add the guest user, guest home space; and fix permissions on company home, guest home and guest person.
patch.guestUser.result=Added guest user and fixed permissions.
#Added guest user and fixed permissions.

patch.fixNodeSerializableValues.description=Ensure that property values are not stored as Serializable if at all possible
#Ensure that property values are not stored as Serializable if at all possible
patch.fixNodeSerializableValues.result=Fixed {0} node property serialized values
#Fixed {0} node property serialized values

patch.updateGuestPermission.description=Rename guest permission from 'Guest' to 'Consumer'
#Rename guest permission from 'Guest' to 'Consumer'
patch.updateGuestPermission.result=Changed {0} 'Guest' access control entries to 'Consumer'.
#Changed {0} 'Guest' access control entries to 'Consumer'.

patch.categoryRootPermission.description=Sets required permissions on 'Category Root' folder.
#Sets required permissions on 'Category Root' folder.
patch.categoryRootPermission.result=Granted CONSUMER role to GUEST on 'Category Root' folder: {0}.
#Granted CONSUMER role to GUEST on 'Category Root' folder: {0}.
patch.categoryRootPermission.err.not_found='Category Root' folder ({0}) could not be found.
#'Category Root' folder ({0}) could not be found.

patch.guestPersonPermission.description=Change Guest Person permission from 'Consumer' to 'Read'
#Change Guest Person permission from 'Consumer' to 'Read'
patch.guestPersonPermission.result=Updated Guest Person permission from 'Consumer' to 'Read'
#Updated Guest Person permission from 'Consumer' to 'Read'

patch.spacesRootPermission.description=Change Spaces store root permission from 'Consumer' to 'Read'
#Change Spaces store root permission from 'Consumer' to 'Read'
patch.spacesRootPermission.result=Updated Spaces store root permission from 'Consumer' to 'Read'
#Updated Spaces store root permission from 'Consumer' to 'Read'

patch.contentPermission.description=Update permission entries from 'cm:content' to 'sys:base'.
#Update permission entries from 'cm:content' to 'sys:base'.
patch.contentPermission.result=Changed {0} 'cm:content' access control entries to 'sys:base'.
#Changed {0} 'cm:content' access control entries to 'sys:base'.

patch.forumsIcons.description=Updates forums icon references
#Updates forums icon references
patch.forumsIcons.result=Updated {0} icon references
#Updated {0} icon references

patch.emailTemplatesFolder.description=Ensures the existence of the 'Email Templates' folder.
#Ensures the existence of the 'Email Templates' folder.
patch.emailTemplatesFolder.result.exists=The email templates folder already exists: {0}
#The email templates folder already exists: {0}
patch.emailTemplatesFolder.result.created=The email templates folder was successfully created: {0}
#The email templates folder was successfully created: {0}

patch.emailTemplatesContent.description=Loads the email templates into the Email Templates folder.
#Loads the email templates into the Email Templates folder.
patch.emailTemplatesContent.result=Imported the Email Templates into the default folder.
#Imported the Email Templates into the default folder.

patch.descriptorUpdate.description=Update Repository descriptor
#Update Repository descriptor
patch.descriptorUpdate.result=Repository descriptor updated
#Repository descriptor updated

patch.scriptsFolder.description=Ensures the existence of the 'Scripts' folder.
#Ensures the existence of the 'Scripts' folder.
patch.scriptsFolder.result.exists=The scripts folder already exists: {0}
#The scripts folder already exists: {0}
patch.scriptsFolder.result.created=The scripts folder was successfully created: {0}
#The scripts folder was successfully created: {0}

patch.topLevelGroupParentChildAssociationTypePatch.description=Ensure top level groups have the correct child association type.
#Ensure top level groups have the correct child association type.
patch.topLevelGroupParentChildAssociationTypePatch.result=Fixed {0} top level groups child association types.
#Fixed {0} top level groups child association types.
patch.topLevelGroupParentChildAssociationTypePatch.err.sys_path_not_found=Required authority system path not found: {0}
#Required authority system path not found: {0}
patch.topLevelGroupParentChildAssociationTypePatch.err.auth_path_not_found=Required authority path not found: {0}
#Required authority path not found: {0}

patch.actionRuleDecouplingPatch.description=Migrate existing rules to the updated model where rules are decoupled from actions.
#Migrate existing rules to the updated model where rules are decoupled from actions.
patch.actionRuleDecouplingPatch.result=Updated {0} rules.
#Updated {0} rules.

patch.systemWorkflowFolder.description=Ensures the existence of the system workflow container.
#Ensures the existence of the system workflow container.
patch.systemWorkflowFolder.result.created=Created system workflow container {0}.
#Created system workflow container {0}.

patch.rssTemplatesFolder.description=Ensures the existence of the 'RSS Templates' folder.
#Ensures the existence of the 'RSS Templates' folder.
patch.rssTemplatesFolder.result.exists=The RSS Templates folder already exists: {0}
#The RSS Templates folder already exists: {0}
patch.rssTemplatesFolder.result.created=The RSS Templates folder was successfully created: {0}
#The RSS Templates folder was successfully created: {0}

patch.uifacetsAspectRemovalPatch.description=Removes the incorrectly applied uifacets aspect from presentation template files.
#Removes the incorrectly applied uifacets aspect from presentation template files.
patch.uifacetsAspectRemovalPatch.updated=Successfully removed the uifacets aspect from {0} presentation template files.
#Successfully removed the uifacets aspect from {0} presentation template files.

patch.guestPersonPermission2.description=Change Guest Person permission to visible by all users as 'Consumer'.
#Change Guest Person permission to visible by all users as 'Consumer'.
patch.guestPersonPermission2.result=Updated Guest Person permission to visible by all users as 'Consumer'.
#Updated Guest Person permission to visible by all users as 'Consumer'.

patch.schemaUpgradeScript.description=Ensures that the database upgrade script has been run.
#Ensures that the database upgrade script has been run.
patch.schemaUpgradeScript.err.not_executed=The schema upgrade script, ''{0}'', has not been run against this database.
#The schema upgrade script, ''{0}'', has not been run against this database.

patch.uniqueChildName.description=Checks and renames duplicate children.
#Checks and renames duplicate children.
patch.uniqueChildName.copyOf=({0}-{1})
#({0}-{1})
patch.uniqueChildName.result=Checked {0} associations and fixed {1} duplicates. See file {2} for details.
#Checked {0} associations and fixed {1} duplicates. See file {2} for details.
patch.uniqueChildName.err.unable_to_fix=Auto-fixing of duplicate names failed. See file {0} for details.
#Auto-fixing of duplicate names failed. See file {0} for details.

patch.invalidNameEnding.description=Fixes names ending with a space or full stop.
#Fixes names ending with a space or full stop.
patch.invalidNameEnding.result=Fixed {0} names ending with a space or full stop. See file {1} for details.
#Fixed {0} names ending with a space or full stop. See file {1} for details.
patch.invalidNameEnding.err.unable_to_fix=Auto-fixing of names ending with a space or full stop failed. See file {0} for details.
#Auto-fixing of names ending with a space or full stop failed. See file {0} for details.
patch.invalidNameEnding.rewritten=Name ''{0}'' rewritten to ''{1}''
#Name ''{0}'' rewritten to ''{1}''

patch.systemDescriptorContent.description=Adds the version properties content to the system descriptor.
#Adds the version properties content to the system descriptor.
patch.systemDescriptorContent.result=Added the version properties content to the system descriptor.
#Added the version properties content to the system descriptor.
patch.systemDescriptorContent.err.no_version_properties=The version.properties resource could not be found.
#The version.properties resource could not be found.
patch.systemDescriptorContent.err.no_descriptor=The system descriptor could not be found.
#The system descriptor could not be found.

patch.versionHistoryPerformance.description=Improves the performance of version history lookups.
#Improves the performance of version history lookups.
patch.versionHistoryPerformance.result=Updated {0} version history objects to improve performance.
#Updated {0} version history objects to improve performance.

patch.multilingualBootstrap.description=Bootstraps the node that will hold the multilingual containers.
#Bootstraps the node that will hold the multilingual containers.

patch.wcmFolders.description=Ensures the existance of the WCM specific 'Web Projects' and 'Web Forms' folders.
#Ensures the existance of the WCM specific 'Web Projects' and 'Web Forms' folders.
patch.wcmFolders.webprojects.result.exists=The Web Projects folder already exists: {0}
#The Web Projects folder already exists: {0}
patch.wcmFolders.webprojects.result.created=The Web Projects folder was successfully created: {0}
#The Web Projects folder was successfully created: {0}
patch.wcmFolders.webforms.result.exists=The Web Forms folder already exists: {0}
#The Web Forms folder already exists: {0}
patch.wcmFolders.webforms.result.created=The Web Forms folder was successfully created: {0}
#The Web Forms folder was successfully created: {0}

patch.linkNodeExtension.description=Fixes link node file extensions to have a .url extension.
#Fixes link node file extensions to have a .url extension.
patch.linkNodeExtension.result=Fixed {0} link node file extensions. See file {1} for details.
#Fixed {0} link node file extensions. See file {1} for details.
patch.linkNodeExtension.err.unable_to_fix=Auto-fixing of link node file extensions failed. See file {0} for details.
#Auto-fixing of link node file extensions failed. See file {0} for details.
patch.linkNodeExtension.rewritten=Name ''{0}'' rewritten to ''{1}''
#Name ''{0}'' rewritten to ''{1}''

patch.systemRegistryBootstrap.description=Bootstraps the node that will hold system registry metadata.
#Bootstraps the node that will hold system registry metadata.

patch.userAndPersonUserNamesAsIdentifiers.description=Reindex user:user and cm:person uids as identifiers
#Reindex usr:user and cm:person uids as identifiers
patch.userAndPersonUserNamesAsIdentifiers.result=Reindexed user:user and cm:person uids as identifiers
#Reindexed user:user and cm:person uids as identifiers

patch.contentFormFolderType.description=Update WCM Content Form folder type.
#Update WCM Content Form folder type.
patch.contentFormFolderType.result=Updated {0} WCM Content Form objects to 'wcm:formfolder' type.
#Updated {0} WCM Content Form objects to 'wcm:formfolder' type.

patch.groupNamesAsIdentifiers.description=Reindex usr:authorityContainer gids as identifiers
#Reindex usr:authorityContainer gids as identifiers
patch.groupNamesAsIdentifiers.result=Reindexed usr:authorityContainer with identifiers
#Reindexed usr:authorityContainer with identifiers

patch.invalidUserPersonAndGroup.description=Fix up invalid uids for people and users; and invalid gids for groups
#Fix up invalid uids for people and users; and invalid gids for groups
patch.invalidUserPersonAndGroup.result=Fixed ''{0}'' invalid user nodes, ''{1}'' invalid person nodes and ''{2}'' invalid authority nodes.
#Fixed ''{0}'' invalid user nodes, ''{1}'' invalid person nodes and ''{2}'' invalid authority nodes.

patch.AVMGuidPatch.description=Set GUIDs on AVM nodes.
#Set GUIDs on AVM nodes.
patch.AVMGuidPatch.result=AVM GUIDS set.
#AVM GUIDS set.

patch.webscripts.description=Adds Web Scripts to Data Dictionary.
#Adds Web Scripts to Data Dictionary.
patch.webscripts2.description=Adds Web Scripts (second set) to Data Dictionary.
#Adds Web Scripts (second set) to Data Dictionary.
patch.webscripts3.description=Update Web Scripts ReadMe.
#Update Web Scripts ReadMe.
patch.webscriptsExtension.description=Adds Web Scripts Extension to Data Dictionary.
#Adds Web Scripts Extension to Data Dictionary.

patch.AVMLayeredSnapshot.description=Set indirectionVersion on Layered Nodes.
#Set indirectionVersion on Layered Nodes.
patch.AVMLayeredSnapshot.result=Layered Node indirectionVersions set.
#Layered Node indirectionVersions set.

patch.groupMembersAsIdentifiers.description=Reindex usr:authorityContainer members as identifiers=======
#Reindex usr:authorityContainer members as identifiers

patch.genericWorkflow.result.deployed=Re-deployed {0} workflows.
#Re-deployed {0} workflows.

patch.redeploySubmitProcess.description=Re-deploy WCM Submit Process Definition.
#Re-deploy WCM Submit Process Definition.

patch.AVMLocking.description=Adds existing web projects to locking service.
#Adds existing web projects to locking service.
patch.AVMLocking.result=Necessary web projects added.
#Necessary web projects added.

patch.AVMAspects.description=Changes storage of aspects on AVM Nodes.
#Changes storage of aspects on AVM Nodes.
patch.AVMAspects.result=Aspects were moved.
#Aspects were moved.

patch.ReadmeTemplate.description=Deployed ReadMe Template
#Deployed ReadMe Template
patch.webScriptsReadme.description=Applied ReadMe template to Web Scripts folders
#Applied ReadMe template to Web Scripts folders

patch.AVMProperties.description=Changes storage of properties on AVM Nodes.
#Changes storage of properties on AVM Nodes.
patch.AVMProperties.result=Properties were moved.
#Properties were moved.

patch.customModels.description=Adds 'Models' folder to Data Dictionary
#Adds 'Models' folder to Data Dictionary
patch.customMessages.description=Adds 'Messages' folder to Data Dictionary
#Adds 'Messages' folder to Data Dictionary
patch.customWebClientExtension.description=Adds 'Web Client Extension' folder to Data Dictionary
#Adds 'Web Client Extension' folder to Data Dictionary

patch.customWorkflowDefs.description=Adds 'Workflow Definitions' folder to Data Dictionary.
#Adds 'Workflow Definitions' folder to Data Dictionary.

patch.emailContributorGroup.description=Adds the 'GROUP_EMAIL_CONTRIBUTORS' group.
#Adds the 'GROUP_EMAIL_CONTRIBUTORS' group.

patch.avmStoreAsIdentifier.description=Reindex wca:webfolder to make wca:avmstore an identifier
#Reindex wca:webfolder to make wca:avmstore an identifier
patch.avmStoreAsIdentifier.result=Reindexed wca:webfolder to make wca:avmstore an identifier
#Reindexed wca:webfolder to make wca:avmstore an identifier

patch.avmFormPropertyIdentifier.description=Reindex wca:webform to make wca:formname an identifier
#Reindex wca:webform to make wca:formname an identifier
patch.avmFormPropertyIdentifier.result=Reindexed wca:webform to make wca:formname an identifier
#Reindexed wca:webform to make wca:formname an identifier

patch.formsFolder.description=Adds 'Forms' folder to Data Dictionary.
#Adds 'Forms' folder to Data Dictionary.

patch.tagRootCategory.description=Adds 'Tags' as new top-level category root.
#Adds 'Tags' as new top-level category root.

patch.sitesFolder.description=Adds 'Sites' folder to Company Home.
#Adds 'Sites' folder to Company Home.

patch.deploymentMigration.description=Migrates deployment data to the new model.
#Migrates deployment data to the new model.
patch.deploymentMigration.webProjectName=Migrating deployment data for web project ''{0}''
#Migrating deployment data for web project ''{0}''
patch.deploymentMigration.serverMigrated=Server ''{0}'' from web project ''{1}'' has been migrated
#Server ''{0}'' from web project ''{1}'' has been migrated
patch.deploymentMigration.reportMigrated=Deployment report for ''{0}'' from web project ''{1}'' has been migrated
#Deployment report for ''{0}'' from web project ''{1}'' has been migrated
patch.deploymentMigration.result=Deployment data has been migrated.
#Deployment data has been migrated.

patch.updateAvmPermissionData.description=Update avm permissions from 'webfolder' to 'cmobject'.
#Update avm permissions from 'webfolder' to 'cmobject'.
patch.updateAvmPermissionData.result=Changed {0} 'webfolder' access control entries to 'cmobject'.
#Changed {0} 'webfolder' access control entries to 'cmobject'.

patch.updateAvmPermissions.description=Update ACLs on all avm objects to the new 2.2 permission model
#Update ACLs on all avm objects to the new 2.2 permission model
patch.updateAvmPermissions.result=Updated ACLs. Created {0} defining and {1} layered ACLs.
#Updated ACLs. Created {0} defining and {1} layered ACLs.

patch.wcmPermissionPatch.description=Fix ACLs so they are only set on the staging area store.
#Fix ACLs so they are only set on the staging area store.
patch.wcmPermissionPatch.result=Updated ACLs: ACLS are moved to the staging area store and removed from all other stores. They are now applied via layering.
#Updated ACLs: ACLS are moved to the staging area store and removed from all other stores. They are now applied via layering.

patch.avmWebProjectInheritPermissions.description=Break inheritance of permissions on wca:webfolder object to hide access by default.
#Break inheritance of permissions on wca:webfolder object to hide access by default.
patch.avmWebProjectInheritPermissions.result=Removed inheritance of permissions on all wca:webfolder objects.
#Removed inheritance of permissions on all wca:webfolder objects.

patch.wcmPostPermissionSnapshotPatch.description=Snapshot stores (after fixing ACLs so they are only set on the staging area store).
#Snapshot stores (after fixing ACLs so they are only set on the staging area store).
patch.wcmPostPermissionSnapshotPatch.result=Snapshot complete after WCM ACL changes.
#Snapshot complete after WCM ACL changes.

patch.updateDmPermissions.description=Update ACLs on all DM node objects to the new 3.0 permission model
#Update ACLs on all DM node objects to the new 3.0 permission model
patch.updateDmPermissions.result=Updated ACLs. Created {0} defining ACLs.
#Updated ACLs. Created {0} defining ACLs.

patch.createSiteStore.description=Create the AVM store for site data structure for 3.0 web-tier clients.
#Create the AVM store for site data structure for 3.0 web-tier clients.
patch.createSiteStore.result=Created the AVM site data store.
#Created the AVM site data store.

patch.sitePermissionRefactorPatch.description=Create permission groups for sites.
#Create permission groups for sites.
patch.sitePermissionRefactorPatch.result=Groups have been created for all sites and user's allocated accordingly.
#Groups have been created for all sites and user's allocated accordingly.

patch.migrateVersionStore.description=Migrate from lightWeightVersionStore to version2Store
#Migrate from lightWeightVersionStore to version2Store
patch.migrateVersionStore.result=Migrated version store. Created {0} version histories
#Migrated version store. Created {0} version histories

