# Module messages

module.err.already_executed=Die Modulkomponente ist bereits ausgeführt worden: {0}.{1}
module.err.component_already_registered=Die Komponente mit dem Namen ''{0}'' ist bereits registriert für Modul ''{1}''.
module.err.component_in_missing_module=Die Komponente ''{0}'' bezieht sich auf ein nicht existierendes Modul ''{1}''.
module.err.downgrading_not_supported=\n\
		Downgrading zu Modul wird nicht unterstützt.\n\
		Das Modul ''{0}'' Version {1} ist aktuell installiert und muss deinstalliert werden, bevor die Version  {2} installiert werden kann.
module.err.execution_failed=Bei der Modulkomponente ''{0}'' kam es bei der Ausführung zum Fehler: {1}
module.err.missing_dependency=\n\
		Modul ''{0}'' Version {1} ist abhängig von Modul ''{2}'', welche noch nicht installiert ist.
module.err.orphaned_components={0} Modulkomponenten sind noch nicht für eine Ausführung berücksichtigt worden.
module.err.unable_to_open_module_properties=Die Datei zu den Moduleigenschaften ''{0}'' können nicht gelesen werden.
module.err.unsupported_repo_version=\n\
		Modul ''{0}'' Version {1} ist inkompatibel mit der aktuellen Repository Version {2}.\n\
		   Die Repository Version erfordert einen Wert im Bereich [{3} : {4}].\ 
module.msg.dependencies=Modul ''{0}'' Version {1} hat die folgenden Abhängigkeiten: {1}
module.msg.found_modules=\ {0} Modul(e) gefunden.
module.msg.installing=Modul ''{0}'' Version {1} wird installiert.
module.msg.missing=Ein zuvor installiertes Modul ''{0}'' (Version {1}) ist nicht in Ihrer Distribution enthalten.
module.msg.starting=Module ''{0}'' Version {1} wird gestartet.
module.msg.upgrading=Upgrading Modul ''{0}'' Version {1} (vorher {2}).
module.warn.no_install_version=Das Modul ''{0}'' hat keine Installationsversion. Die Version {1} wird angenommen und installiert.
