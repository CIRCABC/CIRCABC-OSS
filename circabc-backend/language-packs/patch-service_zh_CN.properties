# PatchService messages
patch.service.not_relevant=Not relevant to schema {0}
patch.executer.checking=Checking for patches to apply ...
patch.executer.no_patches_required=No patches were required.
patch.executer.not_executed =\n=== Recorded patch (not executed) === \nID: {0}\nRESULT: \n{1}\n=====================================
patch.executer.executed     =\n=== Applied patch                 === \nID: {0}\nRESULT: \n{1}\n=====================================
patch.executer.failed       =\n=== Failed to apply patch         === \nID: {0}\nRESULT: \n{1}\n=====================================

# General patch messages

patch.genericBootstrap.result.exists=Bootstrap location already exists: {0}
patch.genericBootstrap.result.created=Imported view into bootstrap location: {0} ({1})
patch.genericBootstrap.err.multiple_found=Multiple nodes found: {0}

patch.general.property_not_set=Patch property ''{0}'' has not been set on this patch: {1}

# Individual patch messages

patch.savedSearchesFolder.description=Ensures the existence of the 'Saved Searches' folder.
patch.savedSearchesFolder.result.exists=The saved searches folder already exists: {0}
patch.savedSearchesFolder.result.created=The saved searches folder was successfully created: {0}

patch.savedSearchesPermission.description=Sets required permissions on 'Saved Searches' folder.
patch.savedSearchesPermission.result.applied=Granted CONTRIBUTOR role to EVERYONE on ''Saved Searches'' folder: {0}.
patch.savedSearchesPermission.err.not_found='Saved Searches' folder could not be found.

patch.updatePermissionData.description=Update permission entries from 'folder' to 'cmobject'.
patch.updatePermissionData.upgrade=Please follow an upgrade path via server version 1.2.1

patch.authoritiesFolder.description=Ensures the existence of the user authorities folder [JIRA: AR-497].

patch.guestUser.description=Add the guest user, guest home space; and fix permissions on company home, guest home and guest person. 
patch.guestUser.result=Added guest user and fixed permissions.

patch.fixNodeSerializableValues.description=Ensure that property values are not stored as Serializable if at all possible
patch.fixNodeSerializableValues.result=Fixed {0} node property serialized values

patch.updateGuestPermission.description=Rename guest permission from 'Guest' to 'Consumer'
patch.updateGuestPermission.upgrade=Please follow an upgrade path via server version 1.2.1

patch.categoryRootPermission.description=Sets required permissions on 'Category Root' folder.
patch.categoryRootPermission.result=Granted CONSUMER role to GUEST on ''Category Root'' folder: {0}.
patch.categoryRootPermission.err.not_found='Category Root' folder ({0}) could not be found.

patch.guestPersonPermission.description=Change Guest Person permission from 'Consumer' to 'Read'
patch.guestPersonPermission.result=Updated Guest Person permission from 'Consumer' to 'Read'

patch.spacesRootPermission.description=Change Spaces store root permission from 'Consumer' to 'Read'
patch.spacesRootPermission.result=Updated Spaces store root permission from 'Consumer' to 'Read'

patch.contentPermission.description=Update permission entries from 'cm:content' to 'sys:base'.
patch.contentPermission.upgrade=Please follow an upgrade path via server version 1.2.1

patch.forumsIcons.description=Updates forums icon references
patch.forumsIcons.result=Updated {0} icon references

patch.emailTemplatesFolder.description=Ensures the existence of the 'Email Templates' folder.
patch.emailTemplatesFolder.result.exists=The email templates folder already exists: {0}
patch.emailTemplatesFolder.result.created=The email templates folder was successfully created: {0}

patch.emailTemplatesContent.description=Loads the email templates into the Email Templates folder.
patch.emailTemplatesContent.result=Imported the Email Templates into the default folder.

patch.descriptorUpdate.description=Update Repository descriptor
patch.descriptorUpdate.result=Repository descriptor updated

patch.scriptsFolder.description=Ensures the existence of the 'Scripts' folder.
patch.scriptsFolder.result.exists=The scripts folder already exists: {0}
patch.scriptsFolder.result.created=The scripts folder was successfully created: {0}
