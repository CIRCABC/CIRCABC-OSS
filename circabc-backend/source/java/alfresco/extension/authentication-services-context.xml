<?xml version='1.0' encoding='UTF-8'?>

<!--
  Copyright 2006 European Community
  
   Licensed under the EUPL, Version 1.1 or as soon they
   will be approved by the European Commission - subsequent
   versions of the EUPL (the "Licence");
   You may not use this work except in compliance with the
   Licence.
   You may obtain a copy of the Licence at:
  
   https://joinup.ec.europa.eu/software/page/eupl
  
   Unless required by applicable law or agreed to in
   writing, software distributed under the Licence is
   distributed on an "AS IS" basis,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
   express or implied.
   See the Licence for the specific language governing
   permissions and limitations under the Licence.
-->
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>
<beans>
    
	<bean name="homeFolderManager"
		class="org.alfresco.repo.security.person.PortableHomeFolderManager">
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
		<property name="defaultProvider">
			<ref bean="companyHomeFolderProvider" />
		</property>
		<property name="fileFolderService">
			<ref bean="FileFolderService" />
		</property>
		<property name="searchService">
			<ref bean="SearchService" />
		</property>
		<property name="NamespaceService">
			<ref bean="NamespaceService" />
		</property>
		<property name="singletonCache">
            <ref bean="immutableSingletonCache" />
        </property>
	</bean>
	
	<!-- The person service. -->
	
    <bean id="personService" class="org.alfresco.repo.security.person.PersonServiceImpl" init-method="init">
        <property name="transactionService" ref="transactionService" />
        <property name="nodeService" ref="nodeService" />
        <property name="tenantService" ref="tenantService"/>
        <property name="singletonCache" ref="immutableSingletonCache"/>
        <property name="searchService" ref="admSearchService" />
        <property name="permissionServiceSPI" ref="permissionServiceImpl" />
        <property name="authorityService" ref="authorityService" />
        <property name="authenticationService" ref="authenticationService" />
        <property name="dictionaryService" ref="dictionaryService" />
        <property name="namespacePrefixResolver" ref="namespaceService" />
        <property name="policyComponent" ref="policyComponent"/>
        <property name="personCache" ref="personCache" />
        <property name="permissionsManager" ref="personServicePermissionsManager" />
        <property name="cannedQueryRegistry" ref="personServiceCannedQueryRegistry" />
        <property name="aclDAO" ref="aclDAO" />
        <property name="homeFolderManager" ref="HomeFolderManager" />
        <property name="repoAdminService" ref="repoAdminService" />
        <property name="serviceRegistry" ref="ServiceRegistry"/>
        
        <!-- Configurable properties. -->
        <property name="homeFolderCreationEager"    value= "${home.folder.creation.eager}" />
        <property name="homeFolderCreationDisabled" value= "${home.folder.creation.disabled}" />
		<!-- -->
		<!-- TODO: -->
		<!-- Add support for creating real home spaces adn setting -->
		<!-- permissions on the hame space and people created. -->
		<!-- -->
		<!-- The store in which people are persisted. -->
		<property name="storeUrl">
			<value>${spaces.store}</value>
		</property>
		<!-- Some authentication mechanisms may need to create people -->
		<!-- in the repository on demand. This enables that feature. -->
		<!-- If dsiabled an error will be generated for missing -->
		<!-- people. If enabled then a person will be created and -->
		<!-- persisted. -->
		<!-- Valid values are -->
		<!-- ${server.transaction.allow-writes} -->
		<!-- false -->
		<property name="createMissingPeople">
			<value>false</value>
		</property>
		<property name="userNameMatcher">
			<ref bean="userNameMatcher" />
		</property>
		<!-- New properties after 1.4.0 to deal with duplicate user ids when found -->
		<property name="processDuplicates">
			<value>true</value>
		</property>
		<!-- one of: LEAVE, SPLIT, DELETE -->
		<property name="duplicateMode">
			<value>DELETE</value>
		</property>
		<property name="lastIsBest">
			<value>true</value>
		</property>
		<property name="includeAutoCreated">
			<value>false</value>
		</property>
	</bean>
    
    
    <bean id="multifactorConfigurationService" class="eu.cec.digit.circabc.service.authentication.MultifactorConfigurationServiceImpl">
        <property name="multifactorEnabled">
            <value>${multifactor.enabled}</value>
        </property>
    </bean>
    
</beans>