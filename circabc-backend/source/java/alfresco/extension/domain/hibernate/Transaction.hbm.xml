<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE hibernate-mapping PUBLIC
    '-//Hibernate/Hibernate Mapping DTD 3.0//EN' 
    'http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd'>
    
<!-- Migration 3.1 -> 3.4.6 - 08/12/2011 - File can maybe be deleted after the migration -->
<hibernate-mapping>

   <class
         name="org.alfresco.repo.domain.hibernate.TransactionImpl"
         proxy="org.alfresco.repo.domain.Transaction"
         table="alf_transaction"
         dynamic-update="false"
         dynamic-insert="false"
         select-before-update="false" 
         lazy="true" 
         optimistic-lock="version"  >
      <!-- auto-generated ID -->
      <id name="id" column="id" type="long" >
         	<generator class="sequence">
			    <param name="sequence">alf_transaction_seq</param>
			</generator>
      </id>
      <!-- Optimistic locking -->
      <version column="version" name="version" type="long" />
      <!-- forward assoc to server IP -->
      <many-to-one
            name="server"
            class="org.alfresco.repo.domain.hibernate.ServerImpl"
            column="server_id"
            foreign-key="fk_alf_txn_svr"
            lazy="proxy"
            fetch="select"
            unique="false"
            not-null="false"
            cascade="none" />
      <property name="changeTxnId" column="change_txn_id" type="string" length="56" not-null="true" />
      <property name="commitTimeMs" column="commit_time_ms" type="long" not-null="false" index="idx_alf_txn_ctms" />
   </class>

   <class
         name="org.alfresco.repo.domain.hibernate.ServerImpl"
         proxy="org.alfresco.repo.domain.Server"
         table="alf_server"
         dynamic-update="false"
         dynamic-insert="false"
         select-before-update="false" 
         lazy="true" 
         optimistic-lock="version"  >
      <!-- auto-generated ID -->
      <id name="id" column="id" type="long" >
         <generator class="native" />
      </id>
      <natural-id>
         <property name="ipAddress" column="ip_address" type="string" length="39" not-null="true" />
      </natural-id>
      <!-- Optimistic locking -->
      <version column="version" name="version" type="long" />
   </class>

   <query name="server.getServerByIpAddress">
      select
         server
      from
         org.alfresco.repo.domain.hibernate.ServerImpl as server
      where
         server.ipAddress = :ipAddress
   </query>

   <query name="txn.GetTxnById">
      select
         txn
      from
         org.alfresco.repo.domain.hibernate.TransactionImpl as txn
      where
         txn.id = :txnId
   </query>

   <query name="txn.GetMinCommitTime">
      select
         min(txn.commitTimeMs)
      from
         org.alfresco.repo.domain.hibernate.TransactionImpl as txn
   </query>

   <query name="txn.GetMaxCommitTime">
      select
         max(txn.commitTimeMs)
      from
         org.alfresco.repo.domain.hibernate.TransactionImpl as txn
   </query>

   <query name="txn.GetMaxIdByCommitTime">
      <![CDATA[
      select
         max(txn.id)
      from
         org.alfresco.repo.domain.hibernate.TransactionImpl as txn
      where
         txn.commitTimeMs <= :maxCommitTime
      ]]>
   </query>

   <query name="txn.GetTxnsByCommitTimeAsc">
      <![CDATA[
      select
         txn
      from
         org.alfresco.repo.domain.hibernate.TransactionImpl as txn
      where
         txn.commitTimeMs >= :fromTimeInclusive and
         txn.commitTimeMs < :toTimeExclusive and
         txn.id not in (:excludeTxnIds) and
         txn.server.id not in (:excludeServerIds)
      order by
         txn.commitTimeMs asc,
         txn.id asc
      ]]>
   </query>

   <query name="txn.GetTxnsByCommitTimeDesc">
      <![CDATA[
      select
         txn
      from
         org.alfresco.repo.domain.hibernate.TransactionImpl as txn
      where
         txn.commitTimeMs >= :fromTimeInclusive and
         txn.commitTimeMs < :toTimeExclusive and
         txn.id not in (:excludeTxnIds) and
         txn.server.id not in (:excludeServerIds)
      order by
         txn.commitTimeMs desc,
         txn.id desc
      ]]>
   </query>
   
   <query name="txn.GetSelectedTxnsByCommitAsc">
      <![CDATA[
      select
         txn
      from
         org.alfresco.repo.domain.hibernate.TransactionImpl as txn
      where
         txn.id in (:includeTxnIds)
      order by
         txn.commitTimeMs asc,
         txn.id asc
      ]]>
   </query>
   
   <query name="txn.CountTransactions">
      select
         count(txn.id)
      from
         org.alfresco.repo.domain.hibernate.TransactionImpl as txn
   </query>

   <query name="txn.GetTxnUpdateCountForStore">
      select
         count(node.uuid)
      from
         org.alfresco.repo.domain.hibernate.NodeImpl as node
         join node.transaction as txn
      where
         txn.id = :txnId and
         node.deleted = false
   </query>

   <query name="txn.GetTxnDeleteCountForStore">
      select
         count(node.uuid)
      from
         org.alfresco.repo.domain.hibernate.NodeImpl as node
         join node.transaction as txn
      where
         txn.id = :txnId and
         node.deleted = true
   </query>

   <query name="txn.GetTxnChangesForStore">
      select
         node.id,
         store.protocol,
         store.identifier,
         node.uuid
      from
         org.alfresco.repo.domain.hibernate.NodeImpl as node
         join node.store as store
      where
         node.transaction.id = :txnId and
         store.protocol = :protocol and
         store.identifier = :identifier
      order by
         node.id asc
   </query>

   <query name="txn.GetTxnChanges">
      select
         node.id,
         store.protocol,
         store.identifier,
         node.uuid
      from
         org.alfresco.repo.domain.hibernate.NodeImpl as node
         join node.store as store
      where
         node.transaction.id = :txnId
      order by
         node.id asc
   </query>

   <query name="txn.GetTxnsUnused">
      <![CDATA[
      select
         txn.id
      from
         org.alfresco.repo.domain.hibernate.NodeImpl as node
         right join node.transaction as txn
      where
         node.id is null and
         txn.id >= :minTxnId and
         txn.commitTimeMs <= :maxCommitTime
      order by
         txn.id asc
      ]]>
   </query>

</hibernate-mapping>